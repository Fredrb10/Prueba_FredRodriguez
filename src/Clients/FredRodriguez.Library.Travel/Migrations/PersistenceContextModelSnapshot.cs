// <auto-generated />
using System;
using FredRodriguez.Library.Travel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FredRodriguez.Library.Travel.Migrations
{
    [DbContext(typeof(PersistenceContext))]
    partial class PersistenceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("FredRodriguez")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FredRodriguez.Library.Travel.Models.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            id = 1,
                            apellidos = "Apellidos del autor 1",
                            nombres = "Nombre del autor 1"
                        },
                        new
                        {
                            id = 2,
                            apellidos = "Apellidos del autor 2",
                            nombres = "Nombre del autor 2"
                        },
                        new
                        {
                            id = 3,
                            apellidos = "Apellidos del autor 3",
                            nombres = "Nombre del autor 3"
                        },
                        new
                        {
                            id = 4,
                            apellidos = "Apellidos del autor 4",
                            nombres = "Nombre del autor 4"
                        },
                        new
                        {
                            id = 5,
                            apellidos = "Apellidos del autor 5",
                            nombres = "Nombre del autor 5"
                        },
                        new
                        {
                            id = 6,
                            apellidos = "Apellidos del autor 6",
                            nombres = "Nombre del autor 6"
                        },
                        new
                        {
                            id = 7,
                            apellidos = "Apellidos del autor 7",
                            nombres = "Nombre del autor 7"
                        },
                        new
                        {
                            id = 8,
                            apellidos = "Apellidos del autor 8",
                            nombres = "Nombre del autor 8"
                        },
                        new
                        {
                            id = 9,
                            apellidos = "Apellidos del autor 9",
                            nombres = "Nombre del autor 9"
                        });
                });

            modelBuilder.Entity("FredRodriguez.Library.Travel.Models.Autor_has_libro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("autor_id")
                        .HasColumnType("int");

                    b.Property<string>("libro_isbn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Autores_Has_Libros");
                });

            modelBuilder.Entity("FredRodriguez.Library.Travel.Models.Editorial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sede")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("id");

                    b.ToTable("Editoriales");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "Editorial 1",
                            sede = "Sede 1"
                        },
                        new
                        {
                            id = 2,
                            nombre = "Editorial 2",
                            sede = "Sede 2"
                        },
                        new
                        {
                            id = 3,
                            nombre = "Editorial 3",
                            sede = "Sede 3"
                        },
                        new
                        {
                            id = 4,
                            nombre = "Editorial 4",
                            sede = "Sede 4"
                        },
                        new
                        {
                            id = 5,
                            nombre = "Editorial 5",
                            sede = "Sede 5"
                        },
                        new
                        {
                            id = 6,
                            nombre = "Editorial 6",
                            sede = "Sede 6"
                        },
                        new
                        {
                            id = 7,
                            nombre = "Editorial 7",
                            sede = "Sede 7"
                        },
                        new
                        {
                            id = 8,
                            nombre = "Editorial 8",
                            sede = "Sede 8"
                        },
                        new
                        {
                            id = 9,
                            nombre = "Editorial 9",
                            sede = "Sede 9"
                        });
                });

            modelBuilder.Entity("FredRodriguez.Library.Travel.Models.Libro", b =>
                {
                    b.Property<string>("isbn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("id_Editorial")
                        .HasColumnType("int");

                    b.Property<int>("n_paginas")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("sinopsis")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("isbn");

                    b.HasIndex("isbn");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            isbn = "978-958-5191-95-1",
                            id = new Guid("c058d936-d710-409e-85eb-144ca9becc21"),
                            id_Editorial = 1,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 1 ",
                            titulo = "Libro 1"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-2",
                            id = new Guid("e97e5e09-c8cd-43be-92b4-6de0d99b91d0"),
                            id_Editorial = 2,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 2 ",
                            titulo = "Libro 2"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-3",
                            id = new Guid("9c3f2563-1e2a-42bd-892e-3b7a2a3121d3"),
                            id_Editorial = 3,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 3 ",
                            titulo = "Libro 3"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-4",
                            id = new Guid("43bc96d2-3518-4414-bce4-fae4c597e962"),
                            id_Editorial = 4,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 4 ",
                            titulo = "Libro 4"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-5",
                            id = new Guid("dabe8a40-b360-4c8d-8546-06f8b76ce46d"),
                            id_Editorial = 5,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 5 ",
                            titulo = "Libro 5"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-6",
                            id = new Guid("d7451a5a-052c-457d-b818-b8b640bc6d06"),
                            id_Editorial = 6,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 6 ",
                            titulo = "Libro 6"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-7",
                            id = new Guid("e86b5063-fe5b-4af1-8db2-e4cb5e1ab0af"),
                            id_Editorial = 7,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 7 ",
                            titulo = "Libro 7"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-8",
                            id = new Guid("58972b5d-b821-4b4b-88a7-6f179bb5c77a"),
                            id_Editorial = 8,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 8 ",
                            titulo = "Libro 8"
                        },
                        new
                        {
                            isbn = "978-958-5191-95-9",
                            id = new Guid("599d310d-2a68-4214-aaed-f84e0f290dd5"),
                            id_Editorial = 9,
                            n_paginas = 10,
                            sinopsis = "Sinopsis libro 9 ",
                            titulo = "Libro 9"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
